/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo_apostrophe {
            key-positions = <18 19>;
            bindings = <&kp SQT>;
            layers = <0>;
        };

        combo_lbracket {
            key-positions = <17 18>;
            bindings = <&kp LEFT_BRACKET>;
            layers = <1>;
        };

        combo_rbracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <18 19>;
            layers = <1>;
        };

        combo_z {
            bindings = <&kp Z>;
            key-positions = <20 21>;
            layers = <0>;
        };

        combo_q {
            bindings = <&kp Q>;
            key-positions = <1 2>;
            layers = <0>;
        };
    };
};

&mt { tapping-term-ms = <400>; };

/ {
    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
&mo 2      &kp W  &kp F      &kp P        &kp B  &kp J            &kp L  &kp U           &kp Y    &lt 2 SEMICOLON
&kp A      &kp R  &kp S      &kp T        &kp G  &kp K            &kp N  &kp E           &kp I    &kp O
&sk LSHFT  &kp X  &kp C      &kp D        &kp V  &kp M            &kp H  &kp COMMA       &kp DOT  &none
&none             &sk LCTRL  &lt 1 SPACE  &none  &lt 1 BACKSPACE         &mt LALT ENTER           &none
            >;
        };

        num_layer {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN   &kp HASH      &kp DOLLAR    &kp PERCENT  &kp CARET             &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5       &kp NUMBER_6          &kp N7         &kp N8        &kp N9                &kp N0
&trans           &trans        &trans        &trans        &trans       &kp NON_US_BACKSLASH  &kp MINUS      &kp EQUAL     &kp SLASH             &trans
&none                          &trans        &trans        &none        &kp LC(BACKSPACE)                    &trans                              &none
            >;
        };

        fnav_layer {
            bindings = <
&gresc  &kp TAB  &kp F1   &kp F2   &kp F3   &kp F4  &kp LA(TAB)  &kp LC(LS(TAB))  &kp LC(TAB)   &kp DELETE
&trans  &kp F5   &kp F6   &kp F7   &kp F8   &trans  &kp LEFT     &kp DOWN         &kp UP_ARROW  &kp RIGHT
&trans  &kp F9   &kp F10  &kp F11  &kp F12  &trans  &kp HOME     &kp END          &trans        &tog 3
&trans           &trans   &trans   &trans   &trans               &trans                         &trans
            >;
        };

        bt_layer {
            bindings = <
&trans  &bt BT_CLR_ALL  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans  &trans  &trans  &trans  &trans
&trans  &trans          &trans        &bootloader   &trans        &trans  &trans  &trans  &trans  &trans
&trans  &trans          &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans
&trans                  &trans        &trans        &trans        &trans          &trans          &trans
            >;
        };
    };
};
